<?php    /**     * Created by PhpStorm.     * User: user     * Date: 01.05.2017     * Time: 15:20     */    use Model\IN_Model;    class UserModel extends IN_Model    {        public function index()        {            return $this->db->select('id,name,link')->table('menu')->where(array('status'=>0))->get();        }        public function create()        {            $login = $_POST['login'];			if (ADMINHASH == true){				$password = $this->hash->create('md5',$_POST['password'],HASH_PASSWORD_KEY);			}else{				$password = $_POST['password'];			}            $ip = $_POST['ip'];            $decription = $_POST['ipDecription'];            $signature = $_POST['signature'];            $permission = $_POST['permission'];            $checkPer = "";            $checkPer2 = "";            if ($login == '' || $password == '' || $ip == '' || $decription == '' || $signature == '' || $permission == 0){                $result['result'] = false;                $result['message'] = 'Lütfen tüm alanları doldurunuz';            }else{                $control = $this->db->select('login,name')->table('user')->where(array('login'=>$login,'name'=>$signature))->count();                if ($control > 0){                    $result['result'] = false;                    $result['message'] = 'Bu kullanıcı adı veya isimde kullanıcı mevcut';                }else{                    foreach ($_POST as $key=>$row){                        $clearPer = substr($key,0,3);                        if ($key != 'login' && $key != 'password' && $key != 'ip' && $key != 'ipDecription' && $key != 'signature' && $key != 'permission' && $clearPer != 'per'){                            if ($row == 1){                                $checkPer .= $key.'|';                            }                        }                    }                    $clear = rtrim($checkPer,'|');                    $perArray = explode('|',$clear);                    $clear2 = "";                    for ($i = 0; $i < count($perArray); $i ++){                        $exp = explode('-',$perArray[$i]);                        $clear2 .= $exp[1].'/';                    }                    foreach ($_POST as $key2=>$row2){                        $clearPer2 = substr($key2,0,3);                        if ($key2 != 'login' && $key2 != 'password' && $key2 != 'ip' && $key2 != 'ipDecription' && $key2 != 'signature' && $key2 != 'permission' && $clearPer2 != 'che'){                            if ($row2 == 1){                                $checkPer2 .= $key2.'|';                            }                        }                    }                    $clear21 = rtrim($checkPer2,'|');                    $perArray2 = explode('|',$clear21);                    $clear22 = "";                    for ($i = 0; $i < count($perArray2); $i ++){                        $exp1 = explode('-',$perArray2[$i]);                        $clear22 .= $exp1[1].'/';                    }                    $permissionName = rtrim($clear2,'/');                    $allPermission = rtrim($clear22,'/');                    $this->db->insert('user',array('login'=>$login,'password'=>$password,'permission'=>$permission,'name'=>$signature,'permissionName'=>$permissionName,'allPermission'=>$allPermission));                    $this->db->insert('ip_list',array('ip'=>$ip,'decription'=>$decription));                    $result['result'] = true;                    $result['message'] = 'Kullanıcı başarıyla oluşturuldu';                }            }            echo json_encode($result);        }        public function users()        {            return $this->db->select()->table('user')->get();        }        public function delete($arg)        {            $id = $this->filter->numberFilter($arg);            $control = $this->db->select('id')->table('user')->where(array('id'=>$id))->count();            if ($control == 0){                URI::redirect('errors/index');                die;            }else{                $this->db->delete('user',array('id'=>$id));                Session::init();                Session::set('changeOK',true);                URI::redirect('user/users');            }        }        public function edit($arg)        {            return $this->db->select()->table('user')->where(array('id'=>$arg))->get();        }    }