<?php    use Model\IN_Model;    class TicketModel extends IN_Model    {        public function close($arg)        {            $control = $this->db->select('ticketid')->table('ticket_status')->where(array('ticketid'=>$arg))->count();            if($control <= 0){                URI::redirect('error');                exit();            }else{                $this->db->update('ticket_status',array('status'=>'2'),array('ticketid'=>$arg));                Functions::setAdminLog("$arg ID'li Ticket'ı Kapattı");                Session::init();                Session::set('aNoty','ok');                URI::redirect('ticket/read');                exit();            }        }		public function ban($arg)		{			$control = $this->gdb->select('id')->table(''.ACCOUNT_DB_NAME.'.account')->where(array('id'=>$arg))->count();			if($control <= 0){				URI::redirect('error');				exit();			}else{				$this->gdb->update('account',array('ticket_ban'=>'1'),array('id'=>$arg));				Functions::setAdminLog("$arg ID'li Kullanıcıya Ticket Ban Attı");				Session::init();				Session::set('aNoty','ok');				URI::redirect('ticket/read');				exit();			}		}		public function ban_open($arg)		{			$control = $this->gdb->select('id')->table(''.ACCOUNT_DB_NAME.'.account')->where(array('id'=>$arg))->count();			if($control <= 0){				URI::redirect('error');				exit();			}else{				$this->gdb->update('account',array('ticket_ban'=>'0'),array('id'=>$arg));				Functions::setAdminLog("$arg ID'li Kullanıcıya Ticket Banını Açtı");				Session::init();				Session::set('aNoty','ok');				URI::redirect('ticket/read');				exit();			}		}        public function read()        {            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'0'))->get();            return $result;        }        public function readmy()        {            Session::init();            $adId = Session::get('adId');            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'0','whoid'=>$adId))->get();            return $result;        }        public function readnull()        {            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'0','whoid'=>'0'))->get();            return $result;        }        public function readother()        {            Session::init();            $aName = Session::get('aName');            $result = $this->db->sql("SELECT * FROM ticket_status WHERE status = ? AND whoid != ? AND whoname != ?",['0','0',$aName]);            return $result;        }        public function unread()        {            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'1'))->get();            return $result;        }        public function unreadmy()        {            Session::init();            $adId = Session::get('adId');            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'1','whoid'=>$adId))->get();            return $result;        }        public function unreadnull()        {            $result = $this->db->select()->table('ticket_status')->where(array('status'=>'1','whoid'=>'0'))->get();            return $result;        }        public function unreadother()        {            Session::init();            $aName = Session::get('aName');            $result = $this->db->sql("SELECT * FROM ticket_status WHERE status = ? AND whoid != ? AND whoname != ?",['1','0',$aName]);            return $result;        }        public function view($arg)        {            $control = $this->db->select()->table('ticket_status')->where(array('ticketid'=>$arg))->count();            if($control <= 0) {                URI::redirect('error');                exit();            }else{                $result['status'] = $this->db->select()->table('ticket_status')->where(array('ticketid'=>$arg))->get();                $result['all'] = $this->db->select()->table('tickets')->where(array('ticketid'=>$arg))->get();                return $result;            }        }        public function send($arg)        {            if ($_POST["message"] == ""){				$result['result'] = false;            }else{                Session::init();                $adId = Session::get('adId');                $aName = Session::get('aName');				$ticketid = filter_var($_POST["ticketid"],FILTER_SANITIZE_STRING);				$accountid = filter_var($_POST["accountid"],FILTER_SANITIZE_STRING);                $username = filter_var($_POST["username"],FILTER_SANITIZE_STRING);                $title = filter_var($_POST["title"],FILTER_SANITIZE_STRING);                $message = filter_var($_POST["message"],FILTER_SANITIZE_STRING);                date_default_timezone_set('Europe/Istanbul');                $date = date("Y-m-d H:i:s");                $this->db->update('ticket_status',array('message'=>$message,'status'=>'0','first'=>'0','whoid'=>$adId,'whoname'=>$aName,'tarih'=>$date),array('ticketid'=>$ticketid));                $this->db->insert('tickets',array('ticketid'=>$ticketid,'accountid'=>$accountid,'username'=>$aName,'title'=>$title,'message'=>$message,'divs'=>'admin','tarih'=>$date,'first'=>'0'));                Functions::setAdminLog("#$arg ID'li Ticket'ı Cevapladı");                $result['result'] = true;			    //Mail Gönderimi                $getMail = $this->gdb->select('email')->table(''.ACCOUNT_DB_NAME.'.account')->where(array('id'=>$accountid))->get()[0]['email'];                $ticketUrl = URL.MUTUAL.'/ticket/view/'.$arg;                $mailText = "Sayın $aName, <br><br> <strong>#$arg</strong> numaralı destek talebiniz cevaplanmıştır. <br> ".\StaticDatabase\StaticDatabase::settings('oyun_adi')." Yönetimi İyi Oyunlar Diler... <br><br>                                 <strong>Konu : </strong> $title<br>                                <strong>Mesaj : </strong>$message<br>                                <strong>Ticket Numarası : </strong>: $arg<br>                                <strong>Ticket Adresiniz : </strong> : $ticketUrl <br><br>                                ".\StaticDatabase\StaticDatabase::settings('oyun_adi')." Yönetimi                                ";                $this->mail->send(\StaticDatabase\StaticDatabase::settings('oyun_adi').' Ticket Sistemi',$getMail,$this->sablon->sablon1($mailText));                //Mail Gönderimi            }			echo json_encode($result);        }        public function realtime()        {            $control = $this->db->select('count')->table('ticket_count')->where(array('id'=>'1'))->get()[0]['count'];            $tCount = filter_var($_POST["accountid"],FILTER_SANITIZE_STRING);            if($control == $tCount){                $result['result'] = false;            }else{                Session::init();                $adId = Session::get('adId');                $control2 = $this->db->prepare("SELECT count,ticketid FROM ticket_count WHERE adminid IN ($adId,'0')");                $control2->execute();                $control2->setFetchMode(PDO::FETCH_ASSOC);                if ($control2->rowCount() <= 0){                    $result['result'] = false;                }else{                    $result['result'] = true;                    $getT = $control2->fetch();                    $result['data'] = array($getT['ticketid'],$getT['count']);                }            }            echo json_encode($result);        }    }