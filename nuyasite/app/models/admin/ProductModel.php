<?php/** * Created by PhpStorm. * User: user * Date: 9.02.2017 * Time: 12:44 */use Model\IN_Model;class ProductModel extends IN_Model{	public function view(){		$data['list'] = $this->gdb->select('vnum,locale_name')->table(''.PLAYER_DB_NAME.'.item_proto')->get();		$data['result'] = $this->gdb->sql('SELECT * FROM '.PLAYER_DB_NAME.'.item_proto LIMIT 2,96');		$data['count'] = count($data['result']);		return $data;	}	public function getview(){		if($_POST){			$rowCount = filter_var($_POST["rowcount"],FILTER_SANITIZE_STRING);			if(isset($rowCount) and $rowCount < 5500){				$rowCount = $rowCount + 2;				$sth = $this->gdb->prepare("SELECT vnum,locale_name FROM ".PLAYER_DB_NAME.".item_proto LIMIT $rowCount,96 ");				$sth->execute();				$sth->setFetchMode(PDO::FETCH_ASSOC);				foreach ($sth->fetchAll() as $product){					$vnum = $product['vnum'];					$url = "'item/$vnum'";					echo '<button onclick="window.location.href='.$url.'" class="tile bg-blue-steel" style="width: 149px!important;">        <div class="tile-body img-responsive">';					$file = "./data/items/".Functions::itemToPng($product['vnum']);					if (!file_exists($file)){						echo '<img src="'.URL.'data/items/zone.png" style="margin-left: 35px;" alt="İnspina Market Paneli" class="img-responsive" />';					}else{						echo '<img src="'.URL.'data/items/'.Functions::itemToPng($product['vnum']).'" style="margin-left: 35px;" alt="İnspina Market Paneli" class="img-responsive" />';					}					echo '</div>        <div class="tile-object">            <div class="name" style="position: absolute;bottom: 0;left: 0;right: 0;min-height: 30px;">'.Functions::utf8($product['locale_name']).'</div>        </div>    </button>';				}			}		}	}	public function search(){		if($_POST){			$searchValue = filter_var($_POST["searchValue"],FILTER_SANITIZE_STRING);			if(empty($searchValue)){				$data['result'] = false;			}else{				$sth = $this->gdb->prepare("SELECT vnum,locale_name FROM ".PLAYER_DB_NAME.".item_proto WHERE vnum LIKE '%$searchValue%'");				$sth->execute();				$sth->setFetchMode(PDO::FETCH_ASSOC);				Functions::setAdminLog("Nesne Markette $searchValue vnum'lu Eşya Aradı");				$data['result'] = true;				$data['items'] = $sth->fetchAll();				$data['count'] = $sth->rowCount();			}			return $data;		}	}	public function item($arg)	{		$sth = $this->gdb->select()->table(''.PLAYER_DB_NAME.'.item_proto')->where(array('vnum'=>$arg));		if ($sth->count() <= 0){			$data['res'] = false;		}else{			if ($file = fopen("data/items/item_desc.txt", "r")) {				$itemDesc = null;				while(!feof($file)) {					$line = fgets($file);					$exp = explode('	',$line);					if ($exp[0] === $arg)						$itemDesc .= $exp[2];				}				fclose($file);				$data['res'] = true;				$data['result'] = $sth->get();				$data['item_desc'] = $itemDesc;				$data['image'] = Functions::itemToPng($data['result'][0]['vnum']);			}			else			{				$data['res'] = false;			}		}		return $data;	}	public function imageupload($arg)	{		if($_FILES){			$control = $this->db->select('vnum')->table('items')->where(array('vnum'=>$arg))->count();			if($control <= 0){				$result['result'] = false;				$result['message'] = 'empty';			}else{				$logo = $_FILES['logo'];				$up = $this->upload->image_upload($logo);				if ($up["result"] === false)					$result = ["result"=>false,"message"=>"error"];				else{					$paths = $up['paths'];					$this->db->update('items',array('item_image'=>$paths),array('vnum'=>$arg));					Functions::setAdminLog("$arg vnum'lu Eşyanın Resmini Değiştirdi");					$result['result'] = true;					$result['message'] = $paths;				}			}			echo json_encode($result);		}	}	public function wheel_imageupload($arg)	{		if($_FILES){			$control = $this->db->select('vnum')->table('wheel_items')->where(array('vnum'=>$arg))->count();			if($control <= 0){				$result['result'] = false;				$result['message'] = 'empty';			}else{				$logo = $_FILES['logo'];				$up = $this->upload->image_upload($logo);				if ($up["result"] === false)					$result = ["result"=>false,"message"=>"error"];				else{					$paths = $up['paths'];					$this->db->update('wheel_items',array('item_image'=>$paths),array('vnum'=>$arg));					Functions::setAdminLog("$arg vnum'lu Eşyanın Resmini Değiştirdi");					$result['result'] = true;					$result['message'] = $paths;				}			}			echo json_encode($result);		}	}	public function itemadd($arg)	{		$control = $this->db->select('vnum')->table('items')->where(array('vnum'=>$arg))->count();		$getProto = $this->gdb->select('flag,wearflag,limitvalue0,applytype0,applytype1,applytype2,type,subtype')->table(''.PLAYER_DB_NAME.'.item_proto')->where(['vnum'=>$arg])->get()[0];		if($control > 10){			$result = ['result'=>false,'message'=>'Bu itemi en fazla 10 kere ekleyebilirsiniz.'];		}else{			$itemName = filter_var($_POST["itemName"],FILTER_SANITIZE_STRING);			$itemImage = 'data/items/'.Functions::itemToPng($arg);			$itemEp = filter_var($_POST["itemEp"],FILTER_SANITIZE_STRING);			$unit_price = filter_var($_POST["unit_price"],FILTER_SANITIZE_STRING);			$count_1 = filter_var($_POST["count_1"],FILTER_SANITIZE_STRING);			$count_2 = filter_var($_POST["count_2"],FILTER_SANITIZE_STRING);			$count_3 = filter_var($_POST["count_3"],FILTER_SANITIZE_STRING);			$count_4 = filter_var($_POST["count_4"],FILTER_SANITIZE_STRING);			$count_5 = filter_var($_POST["count_5"],FILTER_SANITIZE_STRING);			$discount_1 = filter_var($_POST['discount_1'],FILTER_SANITIZE_STRING);			$discount_2 = filter_var($_POST['discount_2'],FILTER_SANITIZE_STRING);			$discount_3 = filter_var($_POST['discount_3'],FILTER_SANITIZE_STRING);			$discount_4 = filter_var($_POST['discount_4'],FILTER_SANITIZE_STRING);			$discount_5 = filter_var($_POST['discount_5'],FILTER_SANITIZE_STRING);			$itemCategory = filter_var($_POST["itemCategory"],FILTER_SANITIZE_STRING);			$itemStatus = filter_var($_POST["status"],FILTER_SANITIZE_STRING);			$itemTime = $_POST["time"];			$itemId = rand(100000000,999999999);			$description = $_POST["description"];			$information = $_POST["information"];			$attrType1 = filter_var($_POST["attrType1"],FILTER_SANITIZE_STRING);			$attrType2 = filter_var($_POST["attrType2"],FILTER_SANITIZE_STRING);			$attrType3 = filter_var($_POST["attrType3"],FILTER_SANITIZE_STRING);			$attrType4 = filter_var($_POST["attrType4"],FILTER_SANITIZE_STRING);			$attrType5 = filter_var($_POST["attrType5"],FILTER_SANITIZE_STRING);			$attrType6 = filter_var($_POST["attrType6"],FILTER_SANITIZE_STRING);			$attrType7 = filter_var($_POST["attrType7"],FILTER_SANITIZE_STRING);			$attrValue1 = filter_var($_POST["attrValue1"],FILTER_SANITIZE_STRING);			$attrValue2 = filter_var($_POST["attrValue2"],FILTER_SANITIZE_STRING);			$attrValue3 = filter_var($_POST["attrValue3"],FILTER_SANITIZE_STRING);			$attrValue4 = filter_var($_POST["attrValue4"],FILTER_SANITIZE_STRING);			$attrValue5 = filter_var($_POST["attrValue5"],FILTER_SANITIZE_STRING);			$attrValue6 = filter_var($_POST["attrValue6"],FILTER_SANITIZE_STRING);			$attrValue7 = filter_var($_POST["attrValue7"],FILTER_SANITIZE_STRING);			$socket0 = filter_var($_POST["socket0"],FILTER_SANITIZE_STRING);			$socket1 = filter_var($_POST["socket1"],FILTER_SANITIZE_STRING);			$socket2 = filter_var($_POST["socket2"],FILTER_SANITIZE_STRING);			$day = filter_var($_POST["day"],FILTER_SANITIZE_STRING);			$hour = filter_var($_POST["hour"],FILTER_SANITIZE_STRING);			$second = filter_var($_POST["second"],FILTER_SANITIZE_STRING);			$popular = filter_var($_POST["popular"],FILTER_SANITIZE_STRING);			$faq_status = filter_var($_POST["faq_status"],FILTER_SANITIZE_STRING);			$is_giftbox = $_POST["is_giftbox"];			$days = $day * (60*60*24);			$hours = $hour * (60*60);			$seconds = $second * (60);			if ($control[0]['vnum'] == "50027" or $control[0]['vnum'] == "70111" or $control[0]['vnum'] == "70112"){ $time = $day; } else { $time = $days + $hours + $seconds; }			$multiCount = 0;			$discount_status = 0;			for ($i=1;$i<6;$i++)			{				if ($_POST["count_$i"] > 0)					$multiCount++;			}			if ($multiCount > 1 && $getProto['flag'] != 4)				$result = ['result'=>false,'message'=>'Bu item üst üste konmaz'];			else			{				if ($discount_1 > 0 || $discount_2 > 0 || $discount_3 > 0 || $discount_4 > 0 || $discount_5 > 0)					$discount_status = 1;				if ($itemTime == 1){					if ($time === 0)						$socket0 = $getProto['limitvalue0'];					else						$socket0 = $time;				}				$wearFlag = Functions::item_attr($getProto['type'],$getProto['subtype']);				$data = array(					'item_id'=>$itemId,					'vnum'=>$arg,					'item_name'=>$itemName,					'item_image'=>$itemImage,					'coins'=>$itemEp,					'unit_price'=>$unit_price,					'count_1'=>$count_1,					'count_2'=>$count_2,					'count_3'=>$count_3,					'count_4'=>$count_4,					'count_5'=>$count_5,					'kategori_id'=>$itemCategory,					'durum'=>$itemStatus,					'item_time'=>$itemTime,					'discount_1' => $discount_1,					'discount_2' => $discount_2,					'discount_3' => $discount_3,					'discount_4' => $discount_4,					'discount_5' => $discount_5,					'description'=>$description,					'attrtype0'=>$attrType1,					'attrtype1'=>$attrType2,					'attrtype2'=>$attrType3,					'attrtype3'=>$attrType4,					'attrtype4'=>$attrType5,					'attrtype5'=>$attrType6,					'attrtype6'=>$attrType7,					'attrvalue0'=>$attrValue1,					'attrvalue1'=>$attrValue2,					'attrvalue2'=>$attrValue3,					'attrvalue3'=>$attrValue4,					'attrvalue4'=>$attrValue5,					'attrvalue5'=>$attrValue6,					'attrvalue6'=>$attrValue7,					'socket0'=>$socket0,					'socket1'=>$socket1,					'socket2'=>$socket2,					'tarih'=>date("Y-m-d H:i:s"),					'information'=>$information,					'popularite' =>$popular,					'multi_count' => $multiCount,					'discount_status' => $discount_status,					'faq_status' =>$faq_status,					'wear_flag' =>$wearFlag,					'applytype0' => $getProto['applytype0'],					'applytype1' => $getProto['applytype1'],					'applytype2' => $getProto['applytype2'],					'is_giftbox' => $is_giftbox,				);				$this->db->insert('items',$data);				Functions::setAdminLog("Nesne Markete $itemName Eşyasını Ekledi");				$result['result']= true;			}		}		echo json_encode($result);	}	public function views()	{		$getItems = $this->db->select('item_id,vnum,item_name,coins,durum,tarih,popularite')->table('items')->get();		return $getItems;	}	public function itemdelete($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$this->db->delete('items',array('item_id'=>$arg));			Session::init();			Session::set('changeOK',true);			URI::redirect('product/views');		}	}	public function item_active($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$this->db->update('items',['durum'=>'1'],['item_id'=>$arg]);			Session::set('changeOK',true);			URI::redirect('product/views');		}	}	public function popularok($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$this->db->update('items',['popularite'=>'1'],['item_id'=>$arg]);			Session::set('changeOK',true);			URI::redirect('product/views');		}	}	public function popularno($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$this->db->update('items',['popularite'=>'0'],['item_id'=>$arg]);			Session::set('changeOK',true);			URI::redirect('product/views');		}	}	public function discount($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			return $arg;		}	}	public function discountok($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$getItem = $this->db->select('coins')->table('items')->where(array('item_id'=>$arg))->get()[0];			$discount = filter_var($_POST['discount'],FILTER_SANITIZE_STRING);			$getEp = $getItem['coins'];			$calc = ($getEp * $discount) / 100;			$setEp = $getEp - $calc;			$setDis = $this->db->update('items',array('durum'=>'2','coins'=>$setEp,'discount'=>$discount,'coins_old'=>$getEp),array('item_id'=>$arg));			Functions::setAdminLog("#$arg ID'li Eşyaya %$discount İndirim Yaptı");			URI::redirect('product/views');			Session::init();			Session::set('changeOK',true);		}	}	public function discountno($arg)	{		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$getItem = $this->db->select('coins_old')->table('items')->where(array('item_id'=>$arg))->get()[0];			$setEp = $getItem['coins_old'];			$setDis = $this->db->update('items',array('durum'=>'1','coins'=>$setEp,'discount'=>'0','coins_old'=>'0'),array('item_id'=>$arg));			Functions::setAdminLog("#$arg ID'li Eşyanın İndirimini Kaldırdı");			URI::redirect('product/views');			Session::init();			Session::set('changeOK',true);		}	}	public function edit($arg){		$control = $this->db->select('item_id')->table('items')->where(array('item_id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/views');		}else{			$getItem = $this->db->select()->table('items')->where(array('item_id'=>$arg))->get()[0];			$getCategory = $this->db->select('id,name')->table('shop_menu')->where(['id'=>$getItem["kategori_id"]])->get()[0];			return ["data"=>$getItem,"category"=>$getCategory];		}	}	public function change($arg)	{		$control = $this->db->select('vnum')->table('items')->where(array('item_id'=>$arg))->get();		if(count($control) < 1){			$result = ['result'=>false,'message'=>'Bu itemi en fazla 10 kere ekleyebilirsiniz.'];		}else{			$itemName = filter_var($_POST["itemName"],FILTER_SANITIZE_STRING);			$itemEp = filter_var($_POST["itemEp"],FILTER_SANITIZE_STRING);			$unit_price = filter_var($_POST["unit_price"],FILTER_SANITIZE_STRING);			$count_1 = filter_var($_POST["count_1"],FILTER_SANITIZE_STRING);			$count_2 = filter_var($_POST["count_2"],FILTER_SANITIZE_STRING);			$count_3 = filter_var($_POST["count_3"],FILTER_SANITIZE_STRING);			$count_4 = filter_var($_POST["count_4"],FILTER_SANITIZE_STRING);			$count_5 = filter_var($_POST["count_5"],FILTER_SANITIZE_STRING);			$discount_1 = filter_var($_POST['discount_1'],FILTER_SANITIZE_STRING);			$discount_2 = filter_var($_POST['discount_2'],FILTER_SANITIZE_STRING);			$discount_3 = filter_var($_POST['discount_3'],FILTER_SANITIZE_STRING);			$discount_4 = filter_var($_POST['discount_4'],FILTER_SANITIZE_STRING);			$discount_5 = filter_var($_POST['discount_5'],FILTER_SANITIZE_STRING);			$itemCategory = filter_var($_POST["itemCategory"],FILTER_SANITIZE_STRING);			$itemStatus = filter_var($_POST["status"],FILTER_SANITIZE_STRING);			$itemTime = $_POST["time"];			$description = $_POST["description"];			$information = $_POST["information"];			$attrType1 = filter_var($_POST["attrType1"],FILTER_SANITIZE_STRING);			$attrType2 = filter_var($_POST["attrType2"],FILTER_SANITIZE_STRING);			$attrType3 = filter_var($_POST["attrType3"],FILTER_SANITIZE_STRING);			$attrType4 = filter_var($_POST["attrType4"],FILTER_SANITIZE_STRING);			$attrType5 = filter_var($_POST["attrType5"],FILTER_SANITIZE_STRING);			$attrType6 = filter_var($_POST["attrType6"],FILTER_SANITIZE_STRING);			$attrType7 = filter_var($_POST["attrType7"],FILTER_SANITIZE_STRING);			$attrValue1 = filter_var($_POST["attrValue1"],FILTER_SANITIZE_STRING);			$attrValue2 = filter_var($_POST["attrValue2"],FILTER_SANITIZE_STRING);			$attrValue3 = filter_var($_POST["attrValue3"],FILTER_SANITIZE_STRING);			$attrValue4 = filter_var($_POST["attrValue4"],FILTER_SANITIZE_STRING);			$attrValue5 = filter_var($_POST["attrValue5"],FILTER_SANITIZE_STRING);			$attrValue6 = filter_var($_POST["attrValue6"],FILTER_SANITIZE_STRING);			$attrValue7 = filter_var($_POST["attrValue7"],FILTER_SANITIZE_STRING);			$socket0 = filter_var($_POST["socket0"],FILTER_SANITIZE_STRING);			$socket1 = filter_var($_POST["socket1"],FILTER_SANITIZE_STRING);			$socket2 = filter_var($_POST["socket2"],FILTER_SANITIZE_STRING);			$day = filter_var($_POST["day"],FILTER_SANITIZE_STRING);			$hour = filter_var($_POST["hour"],FILTER_SANITIZE_STRING);			$second = filter_var($_POST["second"],FILTER_SANITIZE_STRING);			$popular = filter_var($_POST["popular"],FILTER_SANITIZE_STRING);			$days = $day * (60*60*24);			$hours = $hour * (60*60);			$seconds = $second * (60);			if ($control[0]['vnum'] == "50027" or $control[0]['vnum'] == "70111" or $control[0]['vnum'] == "70112"){ $time = $day; } else { $time = $days + $hours + $seconds; }			$multiCount = 0;			$discount_status = 0;			$getProto = $this->gdb->select('flag,limitvalue0')->table(''.PLAYER_DB_NAME.'.item_proto')->where(['vnum'=>$control[0]['vnum']])->get()[0];			for ($i=1;$i<6;$i++)			{				if ($_POST["count_$i"] > 0)					$multiCount++;			}			if ($multiCount > 1 && $getProto['flag'] != 4)				$result = ['result'=>false,'message'=>'Bu item üst üste konmaz'];			else			{				if ($discount_1 > 0 || $discount_2 > 0 || $discount_3 > 0 || $discount_4 > 0 || $discount_5 > 0)					$discount_status = 1;				if ($itemTime == 1){					if ($time === 0)						$socket0 = $getProto['limitvalue0'];					else						$socket0 = $time;				}				$data = array(					'item_name'=>$itemName,					'coins'=>$itemEp,					'unit_price'=>$unit_price,					'count_1'=>$count_1,					'count_2'=>$count_2,					'count_3'=>$count_3,					'count_4'=>$count_4,					'count_5'=>$count_5,					'kategori_id'=>$itemCategory,					'durum'=>$itemStatus,					'item_time'=>$itemTime,					'discount_1' => $discount_1,					'discount_2' => $discount_2,					'discount_3' => $discount_3,					'discount_4' => $discount_4,					'discount_5' => $discount_5,					'description'=>$description,					'attrtype0'=>$attrType1,					'attrtype1'=>$attrType2,					'attrtype2'=>$attrType3,					'attrtype3'=>$attrType4,					'attrtype4'=>$attrType5,					'attrtype5'=>$attrType6,					'attrtype6'=>$attrType7,					'attrvalue0'=>$attrValue1,					'attrvalue1'=>$attrValue2,					'attrvalue2'=>$attrValue3,					'attrvalue3'=>$attrValue4,					'attrvalue4'=>$attrValue5,					'attrvalue5'=>$attrValue6,					'attrvalue6'=>$attrValue7,					'socket0'=>$socket0,					'socket1'=>$socket1,					'socket2'=>$socket2,					'tarih'=>date("Y-m-d H:i:s"),					'information'=>$information,					'popularite' =>$popular,					'multi_count' => $multiCount,					'discount_status' => $discount_status				);				$this->db->update('items',$data,['item_id'=>$arg]);				Functions::setAdminLog("Nesne Markete $itemName Eşyasını Ekledi");				$result['result']= true;			}		}		echo json_encode($result);	}	public function categoryaddok()	{		$what = filter_var($_POST['what'],FILTER_SANITIZE_STRING);		if ($what == 'main'){			$name = filter_var($_POST['name'],FILTER_SANITIZE_STRING);			$icon = filter_var($_POST['icon'],FILTER_SANITIZE_STRING);			$alone = filter_var($_POST['alone'],FILTER_SANITIZE_STRING);			$this->db->insert('shop_menu',array('name'=>$name,'mainmenu'=>'0','status'=>'0','alone'=>$alone,'icon'=>$icon,'icon_type'=>1));			$getId = $this->db->select('id')->table('shop_menu')->where(array('name'=>$name))->get()[0]['id'];			$this->db->update('shop_menu',array('who'=>$getId),array('name'=>$name));		}elseif ($what == 'sub'){			$name = filter_var($_POST['name'],FILTER_SANITIZE_STRING);			$main = filter_var($_POST['mainCategory'],FILTER_SANITIZE_STRING);			$this->db->insert('shop_menu',array('name'=>$name,'mainmenu'=>$main,'status'=>'1','alone'=>'1','who'=>$main));		}		Functions::setAdminLog("Nesne Markete Kategori Ekledi");	}	public function categorylist()	{		return $this->db->select()->table('shop_menu')->get();	}	public function categorydelete($arg)	{		$control = $this->db->select()->table('shop_menu')->where(array('id'=>$arg))->count();		if($control <= 0 ){			URI::redirect('product/categorylist');		}else{			$getCat = $this->db->select()->table('shop_menu')->where(array('id'=>$arg))->get()[0];			$mainmenu = $getCat['mainmenu'];			if($mainmenu == 0){				$this->db->delete('shop_menu',array('id'=>$arg));				$this->db->delete('shop_menu',array('mainmenu'=>$arg));			}else{				$this->db->delete('shop_menu',array('id'=>$arg));			}			Session::init();			Session::set('changeOK',true);			Functions::setAdminLog("Nesne Marketten Kategori Sildi");			URI::redirect('product/categorylist');		}	}	public function bonusaddok()	{		$wear_flag = filter_var($_POST['wear_flag'],FILTER_SANITIZE_STRING);		$apply = filter_var($_POST['apply'],FILTER_SANITIZE_STRING);		$rate = filter_var($_POST['rate'],FILTER_SANITIZE_STRING);		if ($apply == 0){			URI::redirect('product/bonusadd');		}else{			$this->db->insert('shop_bonus',array('wear_flag'=>$wear_flag,'apply'=>$apply,'rate'=>$rate));			Functions::setAdminLog("Nesne Bonusu Ekledi");		}	}	public function bonuslist()	{		return $this->db->select()->table('shop_bonus')->get();	}	public function bonusdelete($arg)	{		$control = $this->db->select()->table('shop_bonus')->where(array('id'=>$arg))->count();		if($control <= 0 ){			URI::redirect('product/bonuslist');		}else{			$this->db->delete('shop_bonus',array('id'=>$arg));			Session::init();			Session::set('changeOK',true);			Functions::setAdminLog("Nesne Bonusunu Sildi");			URI::redirect('product/bonuslist');		}	}	public function deleteall()	{		$this->db->sql("DELETE FROM items");		Session::set('changeOK',true);		URI::redirect('product/views');	}	public function wheel_itemadd($arg)	{		$control = $this->db->select('vnum')->table('items')->where(array('vnum'=>$arg))->count();		$getProto = $this->gdb->select('flag,limitvalue0')->table(''.PLAYER_DB_NAME.'.item_proto')->where(['vnum'=>$arg])->get()[0];		if($control > 10){			$result = ['result'=>false,'message'=>'Bu itemi en fazla 10 kere ekleyebilirsiniz.'];		}else{			$getWheelCount = $this->db->sql("SELECT COUNT(id) as count FROM wheel_items")[0]['count'];			if ($getWheelCount > 47)				$result = ['result'=>false,'message'=>'En fazla 48 adet eşya ekleyebilirsiniz'];			else			{				$itemName = filter_var($_POST["itemName"],FILTER_SANITIZE_STRING);				$itemImage = 'data/items/'.Functions::itemToPng($arg);				$count = filter_var($_POST["count"],FILTER_SANITIZE_STRING);				$itemTime = $_POST["time"];				$description = $_POST["description"];				$information = $_POST["information"];				$attrType1 = filter_var($_POST["attrType1"],FILTER_SANITIZE_STRING);				$attrType2 = filter_var($_POST["attrType2"],FILTER_SANITIZE_STRING);				$attrType3 = filter_var($_POST["attrType3"],FILTER_SANITIZE_STRING);				$attrType4 = filter_var($_POST["attrType4"],FILTER_SANITIZE_STRING);				$attrType5 = filter_var($_POST["attrType5"],FILTER_SANITIZE_STRING);				$attrType6 = filter_var($_POST["attrType6"],FILTER_SANITIZE_STRING);				$attrType7 = filter_var($_POST["attrType7"],FILTER_SANITIZE_STRING);				$attrValue1 = filter_var($_POST["attrValue1"],FILTER_SANITIZE_STRING);				$attrValue2 = filter_var($_POST["attrValue2"],FILTER_SANITIZE_STRING);				$attrValue3 = filter_var($_POST["attrValue3"],FILTER_SANITIZE_STRING);				$attrValue4 = filter_var($_POST["attrValue4"],FILTER_SANITIZE_STRING);				$attrValue5 = filter_var($_POST["attrValue5"],FILTER_SANITIZE_STRING);				$attrValue6 = filter_var($_POST["attrValue6"],FILTER_SANITIZE_STRING);				$attrValue7 = filter_var($_POST["attrValue7"],FILTER_SANITIZE_STRING);				$socket0 = filter_var($_POST["socket0"],FILTER_SANITIZE_STRING);				$socket1 = filter_var($_POST["socket1"],FILTER_SANITIZE_STRING);				$socket2 = filter_var($_POST["socket2"],FILTER_SANITIZE_STRING);				$day = filter_var($_POST["day"],FILTER_SANITIZE_STRING);				$hour = filter_var($_POST["hour"],FILTER_SANITIZE_STRING);				$second = filter_var($_POST["second"],FILTER_SANITIZE_STRING);				$days = $day * (60*60*24);				$hours = $hour * (60*60);				$seconds = $second * (60);				if ($control[0]['vnum'] == "50027" or $control[0]['vnum'] == "70111" or $control[0]['vnum'] == "70112"){ $time = $day; } else { $time = $days + $hours + $seconds; }				if ($count > 1 && $getProto['flag'] != 4)					$result = ['result'=>false,'message'=>'Bu item üst üste konmaz'];				else				{					if ($itemTime == 1){						if ($time === 0)							$socket0 = $getProto['limitvalue0'];						else							$socket0 = $time;					}					$data = array(						'vnum'=>$arg,						'item_name'=>$itemName,						'item_image'=>$itemImage,						'count'=>$count,						'item_time'=>$itemTime,						'description'=>$description,						'attrtype0'=>$attrType1,						'attrtype1'=>$attrType2,						'attrtype2'=>$attrType3,						'attrtype3'=>$attrType4,						'attrtype4'=>$attrType5,						'attrtype5'=>$attrType6,						'attrtype6'=>$attrType7,						'attrvalue0'=>$attrValue1,						'attrvalue1'=>$attrValue2,						'attrvalue2'=>$attrValue3,						'attrvalue3'=>$attrValue4,						'attrvalue4'=>$attrValue5,						'attrvalue5'=>$attrValue6,						'attrvalue6'=>$attrValue7,						'socket0'=>$socket0,						'socket1'=>$socket1,						'socket2'=>$socket2,						'information'=>$information,					);					$this->db->insert('wheel_items',$data);					Functions::setAdminLog("Çark'a $itemName Eşyasını Ekledi");					$result['result']= true;				}			}		}		echo json_encode($result);	}	public function wheel_liste()	{		$getItems = $this->db->select('id,vnum,item_name')->table('wheel_items')->get();		return $getItems;	}	public function wheel_itemdelete($arg)	{		$control = $this->db->select('id')->table('wheel_items')->where(array('id'=>$arg))->count();		if($control <= 0){			URI::redirect('product/wheel_liste');		}else{			$this->db->delete('wheel_items',array('id'=>$arg));			Session::init();			Session::set('changeOK',true);			URI::redirect('product/wheel_liste');		}	}	public function wheel_deleteall()	{		$this->db->sql("DELETE FROM wheel_items");		Session::set('changeOK',true);		URI::redirect('product/wheel_liste');	}}