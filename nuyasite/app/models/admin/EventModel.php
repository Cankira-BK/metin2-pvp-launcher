<?phpuse Model\IN_Model;class EventModel extends IN_Model{	public function create()	{		return $this->db->sql("SELECT id,name FROM event_list");	}	public function created()	{		$eventFlag = filter_var($_POST['event_type'],FILTER_SANITIZE_STRING);		if ($eventFlag === false || $eventFlag == '0')			$return = false;		else		{			$this->db->update('settings',array('deger'=>$eventFlag),array('anahtar'=>'event_type'));			$return = true;		}		echo json_encode($return);	}	public function plan()	{		if (\StaticDatabase\StaticDatabase::settings('event_type') == "1")			return $this->db->select()->table('event_list')->get();		else			return $this->db->sql("SELECT id,day,name,time,owner FROM events ORDER BY owner ASC");	}	public function plancreate()	{		$eventName = $_POST['eventName'];		$startDate = $_POST['startDate'];		$finishDate = $_POST['finishDate'];		if ($eventName == '0' || $startDate == '' || $finishDate == '') {			$result['result'] = 'empty';		} else {			$control = $this->db->select('eventFlag,gameNotice,name')->table('event_list')->where(array('eventFlag' => $eventName));			$getEventInfo = $control->get()[0];			$eventFlag = $getEventInfo['eventFlag'];			$eventNotice = $getEventInfo['gameNotice'];			$eventName = $getEventInfo['name'];			if ($control->count() <= 0) {				$result['result'] = 'false';			} else {				$control2 = $this->db->select('id')->table('event_crone')->where(array('startDate' => $startDate))->count();				if ($control2 > 0) {					$result['result'] = 'got';				} else {					$month = explode(" ", $startDate);					$month = $month[0];					$month = explode("-", $month);					$month = $month[1];					$day = explode(" ", $startDate);					$day = $day[0];					$day = explode("-", $day);					$day = $day[2];					$data = array(						'startDate' => $startDate,						'eventFlag' => $eventFlag,						'status' => '0',						'eventNotice' => $eventNotice,						'finishDate' => $finishDate,						'eventName' => $eventName,						'month' => $month,						'day' => $day					);					$this->db->insert('event_crone', $data);					Functions::setAdminLog("$eventName Eventi Planladı");					$result['result'] = 'true';				}			}		}		echo json_encode($result);	}	public function plancreate2()	{		$day = $_POST['day'];		$name = $_POST['name'];		$time = $_POST['time'];		$owner = $_POST['owner'];		if ($day == '' || $name == '' || $time == '' || $owner == '') {			die(json_encode(["result"=>false,"message"=>"Lütfen tüm alanları doldurunuz!"]));		}		$insertData = [			"day"=>$day,			"name"=>$name,			"time"=>$time,			"owner"=>$owner		];		$this->db->insert('events',$insertData);		die(json_encode(["result"=>true,"message"=>"Event oluşturuldu!"]));	}	public function liste()	{		return $this->db->select()->table('event_crone')->get();	}	public function delete($arg)	{		$this->db->delete('event_crone', array('id' => $arg));		Session::set('changeOK', true);		URI::redirect('event/liste');		die;	}	public function delete2($arg)	{		$this->db->delete('events', array('id' => $arg));		Session::set('changeOK', true);		URI::redirect('event/plan');		die;	}	public function edit($arg)	{		$event = $this->db->select()->table('event_crone')->where(array('id' => $arg))->get();		if ($event < 1)			URI::redirect('errors/index');		else {			$data['event'] = $event;			$data['eventList'] = $this->db->select()->table('event_list')->get();			return $data;		}	}	public function change()	{		$id = $_POST['id'];		$eventName = $_POST['eventName'];		$startDate = $_POST['startDate'];		$finishDate = $_POST['finishDate'];		$getEventList = $this->db->select()->table('event_list')->where(array('eventFlag' => $eventName))->get()[0];		$explode = explode(" ", $startDate)[0];		$dExplode = explode("-", $explode);		$day = $dExplode[2];		$month = $dExplode[1];		$this->db->update('event_crone', array('startDate' => $startDate, 'eventFlag' => $getEventList['eventFlag'], 'eventNotice' => $getEventList['gameNotice'], 'finishDate' => $finishDate, 'eventName' => $getEventList['name'], 'day' => $day, 'month' => $month), array('id' => $id));		Session::set('changeOK', true);		URI::redirect('event/liste');		die;	}	public function close($arg)	{		$arg2 = mb_strtolower($arg);		if ($arg2 == '')			URI::redirect('event/create');		else		{			Functions::sendServer("$arg2 0","EVENT");			Session::set('changeOK2', true);			URI::redirect('event/create');		}	}	public function close2($arg)	{		$arg2 = mb_strtolower($arg);		if ($arg2 == '')			URI::redirect('event/create');		else		{			$control = $this->db->select('eventFlag,gameNotice')->table('event_list')->where(['eventFlag'=>$arg2])->get();			if (count($control) > 0)			{				$eventInfo = $control[0];				$notice = explode("[END_ENTER]",$eventInfo['gameNotice'])[1];				if (Functions::sendServer($notice)['connect'] === false)					URI::redirect('event/create');				else				{					Functions::sendServer("$arg2 0","EVENT");					Session::set('changeOK2', true);					URI::redirect('event/create');				}			}			else				URI::redirect('event/create');		}	}	public function openevent()	{		$eventFlag = $_POST['event_name'];		if ($eventFlag == '') 		{			Session::set('changeNO', true);			URI::redirect('event/create');			die;		}		else		{				Functions::sendServer("$eventFlag 1","EVENT");			Session::set('changeOK', true);			URI::redirect('event/create');			die;		}	}	public function openevent2()	{		$eventFlag = $_POST['event_name'];		if ($eventFlag == '') 		{			Session::set('changeNO', true);			URI::redirect('event/create');			die;		}		else		{			$control = $this->db->select('eventFlag,gameNotice')->table('event_list')->where(['eventFlag'=>$eventFlag])->get();			if (count($control) > 0)			{				$eventInfo = $control[0];				$notice = explode("[END_ENTER]",$eventInfo['gameNotice'])[0];				if (Functions::sendServer($notice)['connect'] === false)					URI::redirect('event/create');				else				{					Functions::sendServer("$eventFlag 1","EVENT");					Session::set('changeOK', true);					URI::redirect('event/create');				}			}			else				URI::redirect('event/create');		}	}}