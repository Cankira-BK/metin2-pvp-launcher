<?php    use Controller\IN_Controller;    class Ticket extends IN_Controller    {        public function __construct()        {            parent::__construct();			if (!isset($_SESSION['aLogin']) || !isset($_SESSION['adId']))				die("Permission Denied!");			else {            	$permissionArray = Session::get('aPermissionArray');            	Functions::checkPermission($permissionArray,Functions::getUrl()[1]);            	Functions::setOn($_SESSION['adId']);			}        }        public function close($arg = null)        {            if ($arg == null){                URI::redirect('error');                exit();            }            $this->model->close($arg);        }		public function ban($arg = null)		{			if ($arg == null){				URI::redirect('error');				exit();			}			$this->model->ban($arg);		}		public function ban_open($arg = null)		{			if ($arg == null){				URI::redirect('error');				exit();			}			$this->model->ban_open($arg);		}        public function read(){            $this->view->read = $this->model->read();            $this->view->render('ticket/read');        }        public function readmy()        {            $this->view->readmy = $this->model->readmy();            $this->view->render('ticket/readmy');        }        public function readnull()        {            $this->view->readnull = $this->model->readnull();            $this->view->render('ticket/readnull');        }        public function readother()        {            $this->view->readother = $this->model->readother();            $this->view->render('ticket/readother');        }        public function unread()        {           $this->view->unread = $this->model->unread();           $this->view->render('ticket/unread');        }        public function unreadmy()        {            $this->view->unreadmy = $this->model->unreadmy();            $this->view->render('ticket/unreadmy');        }        public function unreadnull()        {            $this->view->unreadnull = $this->model->unreadnull();            $this->view->render('ticket/unreadnull');        }        public function unreadother()        {            $this->view->unreadother = $this->model->unreadother();            $this->view->render('ticket/unreadother');        }        public function view($arg)        {            if ($arg == null){                URI::redirect('error');                exit();            }            $this->view->view = $this->model->view($arg);            $this->view->render('ticket/view');        }        public function send($arg = null)        {            if ($arg != null){                if ($_POST){                    $this->helper(['mail','sablon']);                    $this->model->send($arg);                }            }        }        public function realtime()        {            if($_POST){                $this->model->realtime();            }        }    }